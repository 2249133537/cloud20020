server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      #路由可以配置多个，可以为某个controller内的所有接口都做路由

      #以下三行为动态路由开启，并由网关开启负载均衡(轮询)
      #步骤：1.开启动态创建路由 2.将uri写成接口名+服务端口形式
      discovery:
        locator:
          enabled: true  #开启从注册中心动态创建路由功能，利用微服务进行路由
      routes:
        - id: payment_routh           #payment_route 路由id，没有固定规则，但要求唯一，建议配合服务名
#          uri: http://localhost:8001  #匹配后提供服务的路由地址  地址写死
          uri: lb://cloud-payment-service #匹配狗提供服务的路由地址  地址动态
          predicates:
            - Path=/payment/get/**    #断言，路径相匹配后进行路由

        - id: payment_routh2         #payment_route 路由id，没有固定规则，但要求唯一，建议配合服务名
#          uri: http://localhost:8001 #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #匹配狗提供服务的路由地址  地址动态
          predicates:
            - Path=/payment/lb/**    #断言，路径相匹配后进行路由
#            - After=2022-11-01T18:47:18.108+08:00[Asia/Shanghai]  #指定到什么时间之后才能访问，这里写了个测试类获取当前时间
#            - Head=X-Request-Id,\d+ #请求头要有X-Request-Id属性，并且值为正数的正则表达式
#            - Between=2022-11-01T18:47:18.108+08:00[Asia/Shanghai],2022-11-02T18:47:18.108+08:00[Asia/Shanghai]  #指定到什么时间之间才能访问
#            - Before=2022-11-01T18:47:18.108+08:00[Asia/Shanghai]  #指定到什么时间之前才能访问
#            - Cookie=username,OS  #指定需要携带XX指定的Cookie信息才能访问，这里指定了访问必须为本机用户\
eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    #表示是否将自己注册进EurekaServer，默认为true
    register-with-eureka: true
    #是否冲EurekaServer抓取已有的注册信息，默认为true.
    #但节点无所谓，如果是集群则必须设置为ture才能配合Ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #入驻的eureka服务中心地址
      defaultZone: http://localhost:7001/eureka  #单机版
      #      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka  #集群版

